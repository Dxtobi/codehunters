// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  username      String?    @unique
  name          String
  email         String     @unique
  password      String?
  emailVerified DateTime?
  image         String?
  occupation    String     @default("")
  bio           String?
  twitter       String?
  github        String?
  accounts      Account[]
  sessions      Session[]
  message       Message[]
  profile       Profile?
  Posts         Post[]
  response      Response[]
  forumid       String     @unique @db.ObjectId
  forum         Forum      @relation(fields: [forumid], references: [id])
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  username   String  @default("no_body")
  occupation String  @default("")
  bio        String
  twitter    String?
  slug       String?
  userId     String  @unique @db.ObjectId
  user       User    @relation(fields: [userId], references: [id])
}

model Forum {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  topics String[]
  userId String @unique @db.ObjectId

  members  User[]
  messages Message[]
}

model Message {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  forumId String @db.ObjectId
  topic   String
  forum  Forum  @relation(fields: [forumId], references: [id])
  User    User   @relation(fields: [userId], references: [id])
}

model Post {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  message    String
  link       String?
  points     String?
  codes_     String?
  image      String?
  responses  Response[]
  created_at String
  userId     String     @unique @db.ObjectId
  user       User       @relation(fields: [userId], references: [id])
  saved      String[]
  tags       String[]
}

model Response {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  created_at String
  userId     String @unique @db.ObjectId
  user       User   @relation(fields: [userId], references: [id])
  postId     String @unique @db.ObjectId
  post       Post   @relation(fields: [postId], references: [id])
}

model Tags {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  related Int
}
